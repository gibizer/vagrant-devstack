---
# TODO:
# * split tasks to host setup, devstack setup(per version different config)
- name: Create stack user
  ansible.builtin.user:
    name: stack
    shell: "/bin/bash"

- name: Set authorized key for stack
  ansible.posix.authorized_key:
    user: stack
    state: present
    key: "{{ lookup('file', '/home/gibi/.ssh/id_ed25519.pub') }}"

- name: Allow stack to have passwordless sudo
  ansible.builtin.copy:
    dest: "/etc/sudoers.d/stack"
    content: |
      stack ALL=(ALL) NOPASSWD: ALL
    owner: root
    group: root
    mode: '0644'

- name: Ensure ipv6 is enabled
  ansible.posix.sysctl:
    name: net.ipv6.conf.all.disable_ipv6
    value: 0
    state: present
    sysctl_set: true

- name: Check if swap enabled
  ansible.builtin.stat:
    path: /swapfile
  register: swap


- name: Add swap
  when: not swap.stat.exists
  block:
    - name: Allocate swapfile
      ansible.builtin.command: fallocate -l 2G /swapfile
      changed_when: true

    - name: Set permission
      ansible.builtin.file:
        path: /swapfile
        owner: root
        group: root
        mode: '0600'
        state: file

    - name: Format
      ansible.builtin.command: mkswap /swapfile
      changed_when: true

    - name: Enable
      ansible.builtin.command: swapon /swapfile
      changed_when: true

- name: Update apt cache and upgrade packages
  ansible.builtin.apt:
    upgrade: true
    update_cache: true

- name: Remove conflicting package
  when: false
  ansible.builtin.apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - python3-httplib2
    - python3-pyasn1
    - python3-pyasn1-modules

- name: Install python-apt to help ansible to install other packages
  when: false
  ansible.builtin.package:
    name: python-apt
    state: present

- name: Install xdot for osc_provider_tree visualization
  ansible.builtin.package:
    name: xdot
    state: present

- name: Install ovs
  ansible.builtin.package:
    name: openvswitch-switch
    state: present

- name: Ensure br-test for bandwidth config
  openvswitch.openvswitch.openvswitch_bridge:
    bridge: br-test
    state: present


- name: Deploy devstack as stack user
  become: true
  become_user: stack
  block:
    - name: Clone devstack repo
      ansible.builtin.git:
        repo: https://opendev.org/openstack/devstack.git
        version: master
        dest: "~/devstack"

    - name: Copy local.conf
      ansible.builtin.copy:
        dest: "~/devstack"
        src: "local.conf"
        mode: '0644'

    - name: Copy bandwidth port create script
      ansible.builtin.copy:
        dest: "~/"
        src: "create_bandwidth_port.sh"
        mode: "ugo+x"

          #    - name: Unstack
          #      command: "./unstack.sh"
          #      args:
          #        chdir: "/home/stack/devstack"

    - name: Clean
      ansible.builtin.command: "./clean.sh"
      args:
        chdir: "/home/stack/devstack"
      changed_when: true

    - name: Stack
      ansible.builtin.command: "./stack.sh"
      args:
        chdir: "/home/stack/devstack"
      changed_when: true

    - name: Create bandwidth ports
      ansible.builtin.shell: ". ~/devstack/openrc admin admin # && ~/create_bandwidth_port.sh"
      args:
        executable: /bin/bash
      changed_when: true

    - name: Setup git email
      community.general.git_config:
        name: user.email
        scope: global
        value: "gibi@redhat.com"

    - name: Setup git name
      community.general.git_config:
        name: user.name
        scope: global
        value: "Balazs Gibizer"
